# frozen_string_literal: true

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "gapic/rest"
require "google/cloud/compute/v1/compute_small_pb"

module Google
  module Cloud
    module Compute
      module V1
        module InstanceGroups
          module Rest
            ##
            # REST service stub for the InstanceGroups service.
            #
            class ServiceStub
              ##
              # Create a new InstanceGroups REST service stub object.
              #
              # @param endpoint [String]
              #   The hostname or hostname:port of the service endpoint.
              #   Defaults to `"localhost:7469"`.
              #
              # @param credentials [Google::Auth::Credentials]
              #   Credentials to send with calls in form of a googleauth credentials object.
              #   (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
              #
              def initialize endpoint:, credentials:
                @client_stub = ::Gapic::Rest::ClientStub.new endpoint: endpoint, credentials: credentials
              end

              # Service calls

              ##
              # Adds a list of instances to the specified instance group. All of the instances in the instance group must be in the same network/subnetwork. Read  Adding instances for more information.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::AddInstancesInstanceGroupRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def add_instances request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups/#{request_pb.instance_group}/addInstances"
                body = request_pb.instance_groups_add_instances_request_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Retrieves the list of instance groups and sorts them by zone.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::AggregatedListInstanceGroupsRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::InstanceGroupAggregatedList]
              def aggregated_list request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/aggregated/instanceGroups"

                query_string_params = {}
                query_string_params["filter"] = request_pb.filter.to_s if request_pb.filter && request_pb.filter != ""
                query_string_params["includeAllScopes"] = request_pb.include_all_scopes.to_s if request_pb.include_all_scopes && request_pb.include_all_scopes != false
                query_string_params["maxResults"] = request_pb.max_results.to_s if request_pb.max_results && request_pb.max_results != 0
                query_string_params["orderBy"] =  request_pb.order_by.to_s if request_pb.order_by && request_pb.order_by != ""
                query_string_params["pageToken"] = request_pb.page_token.to_s if request_pb.page_token && request_pb.page_token != ""
                query_string_params["returnPartialSuccess"] = request_pb.return_partial_success.to_s if request_pb.return_partial_success && request_pb.return_partial_success != false

                result_json = @client_stub.make_get_request(
                  uri:     uri,
                  params:  query_string_params,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::InstanceGroupAggregatedList.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Deletes the specified instance group. The instances in the group are not deleted. Note that instance group must not belong to a backend service. Read  Deleting an instance group for more information.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::DeleteInstanceGroupRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def delete request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups/#{request_pb.instance_group}"

                query_string_params = {}
                query_string_params["requestId"] = request_pb.request_id.to_s if request_pb.request_id && request_pb.request_id != ""

                result_json = @client_stub.make_delete_request(
                  uri:     uri,
                  params:  query_string_params,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Returns the specified zonal instance group. Get a list of available zonal instance groups by making a list() request.
              #
              # For managed instance groups, use the instanceGroupManagers or regionInstanceGroupManagers methods instead.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::GetInstanceGroupRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::InstanceGroup]
              def get request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups/#{request_pb.instance_group}"

                result_json = @client_stub.make_get_request(
                  uri:     uri,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::InstanceGroup.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Creates an instance group in the specified project using the parameters that are included in the request.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::InsertInstanceGroupRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def insert request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups"
                body = request_pb.instance_group_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Retrieves the list of zonal instance group resources contained within the specified zone.
              #
              # For managed instance groups, use the instanceGroupManagers or regionInstanceGroupManagers methods instead.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::ListInstanceGroupsRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::InstanceGroupList]
              def list request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups"

                query_string_params = {}
                query_string_params["filter"] = request_pb.filter.to_s if request_pb.filter && request_pb.filter != ""
                query_string_params["maxResults"] = request_pb.max_results.to_s if request_pb.max_results && request_pb.max_results != 0
                query_string_params["orderBy"] =  request_pb.order_by.to_s if request_pb.order_by && request_pb.order_by != ""
                query_string_params["pageToken"] = request_pb.page_token.to_s if request_pb.page_token && request_pb.page_token != ""
                query_string_params["returnPartialSuccess"] = request_pb.return_partial_success.to_s if request_pb.return_partial_success && request_pb.return_partial_success != false

                result_json = @client_stub.make_get_request(
                  uri:     uri,
                  params:  query_string_params,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::InstanceGroupList.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Lists the instances in the specified instance group. The orderBy query parameter is not supported.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::ListInstancesInstanceGroupsRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::InstanceGroupsListInstances]
              def list_instances request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups/#{request_pb.instance_group}/listInstances"
                body = request_pb.instance_groups_list_instances_request_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::InstanceGroupsListInstances.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Removes one or more instances from the specified instance group, but does not delete those instances.
              #
              # If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration before the VM instance is removed or deleted.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::RemoveInstancesInstanceGroupRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def remove_instances request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups/#{request_pb.instance_group}/removeInstances"
                body = request_pb.instance_groups_remove_instances_request_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body], ignore_unknown_fields: true
              end

              ##
              # Sets the named ports for the specified instance group.
              #
              # @param request_pb [::Google::Cloud::Compute::V1::SetNamedPortsInstanceGroupRequest]
              #   A request object representing the call parameters. Required.
              # @param options [::Gapic::CallOptions]
              #   Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              # @return [::Google::Cloud::Compute::V1::Operation]
              def set_named_ports request_pb, options:, &block
                uri = "/compute/v1/projects/#{request_pb.project}/zones/#{request_pb.zone}/instanceGroups/#{request_pb.instance_group}/setNamedPorts"
                body = request_pb.instance_groups_set_named_ports_request_resource.to_json

                result_json = @client_stub.make_post_request(
                  uri:     uri,
                  body:    body,
                  options: options,
                  &block
                )

                ::Google::Cloud::Compute::V1::Operation.decode_json result_json[:body], ignore_unknown_fields: true
              end
            end
          end
        end
      end
    end
  end
end
